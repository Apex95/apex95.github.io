I" <p>I recently had a problem when I tried to synchronize the scrolling between 2 <strong>RichTextBoxes</strong> - that was because these controls behave different than normal TextBoxes. However I managed to solve this…after some time, and I decided to post the solution. The idea is based on overriding one RichTextBox’s <strong>WndProc()</strong> and then sending its scroll position to the other one.</p>

<p>The advantage of this method is that the synchronization is based on the RichTextBox’s real position - not on the thumb/scrollbar position.</p>

<h2 id="1fixed-problems">1.Fixed problems</h2>

<p>These 2 problems are <strong>fixed</strong> if you use this method:</p>

<ol>
  <li>If you press enter, while the caret is on the last line, the RichTextBox scrolls a little bit more than it should while the other one scrolls normally.</li>
  <li>If you delete the last lines in a RichTextBox, it doesn’t scroll down - but the other one will keep scrolling.</li>
</ol>

<h2 id="2-how-to">2. How to</h2>

<p>As I said before, you need to create a <strong>custom RichTextBox</strong>, based on the original one, so you can override <strong>WndProc()</strong>.</p>

<p>A short schema:</p>

<p><strong>syncRichTextBox</strong> (object)<br />
1) scroll<br />
2) tell <strong>anotherRichTextBox</strong> to scroll to my position</p>

<p><strong>anotherRichTextBox</strong><br />
1) idle - doing nothing but waiting for messages from <strong>syncRichTextBox</strong></p>

<p>First, include this function, from <strong>user32.dll</strong></p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="p">[</span><span class="nf">DllImport</span><span class="p">(</span><span class="s">"user32.dll"</span><span class="p">,</span> <span class="n">CharSet</span> <span class="p">=</span> <span class="n">CharSet</span><span class="p">.</span><span class="n">Auto</span><span class="p">)]</span>
<span class="k">private</span> <span class="k">static</span> <span class="k">extern</span> <span class="kt">int</span> <span class="nf">SendMessage</span><span class="p">(</span><span class="n">IntPtr</span> <span class="n">hWnd</span><span class="p">,</span> <span class="kt">int</span> <span class="n">wMsg</span><span class="p">,</span> <span class="n">IntPtr</span> <span class="n">wParam</span><span class="p">,</span> <span class="k">ref</span> <span class="n">Point</span> <span class="n">lParam</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<ul>
  <li>notice the <strong>lParam</strong> argument is a <strong>Point</strong> - this will store the scroll’s position.</li>
</ul>

<p>Then, add these <strong>WM contants</strong>, you’ll need them when you synchronize the scrolling:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="k">private</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">WM_VSCROLL</span> <span class="p">=</span> <span class="m">0x115</span><span class="p">;</span>  <span class="c1">//tells the control to scroll</span>

<span class="k">private</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">WM_GETDLGCODE</span> <span class="p">=</span> <span class="m">0x87</span><span class="p">;</span>   <span class="c1">//sent when the caret is going out of the 'visible area' (so scroll is needed)</span>

<span class="k">private</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">WM_MOUSEFIRST</span> <span class="p">=</span> <span class="m">0x200</span><span class="p">;</span>  <span class="c1">//scrolls if the mouse leaves the 'visible area' (example when you select text)</span>

<span class="k">private</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">EM_GETSCROLLPOS</span> <span class="p">=</span> <span class="m">0x4DD</span><span class="p">;</span>  <span class="c1">//you send this message and the control returns it's scroll position</span>

<span class="k">private</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">EM_SETSCROLLPOS</span> <span class="p">=</span> <span class="m">0x4DE</span><span class="p">;</span><span class="c1">//this is used to set the control's scroll position</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Now, you only have to create the custom <strong>RichTextBox</strong> - if its scroll position is changed, it will send a message containing its new position to the other RichTextBox (<strong>anotherRichTextBox</strong>) - the 2nd one doesn’t require overriding.</p>

<p>The code would look like this:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="k">public</span> <span class="k">class</span> <span class="nc">syncRichTextBox</span> <span class="p">:</span> <span class="n">RichTextBox</span>
<span class="p">{</span>
      <span class="k">public</span> <span class="nf">syncRichTextBox</span><span class="p">()</span>
      <span class="p">{</span>
              <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">WndProc</span><span class="p">(</span><span class="k">ref</span> <span class="n">Message</span> <span class="n">m</span><span class="p">)</span>
              <span class="p">{</span>
                    <span class="k">base</span><span class="p">.</span><span class="nf">WndProc</span><span class="p">(</span><span class="k">ref</span> <span class="n">m</span><span class="p">);</span>

                    <span class="k">if</span> <span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">Msg</span> <span class="p">==</span> <span class="n">WM_VSCROLL</span> <span class="p">||</span> <span class="n">m</span><span class="p">.</span><span class="n">Msg</span> <span class="p">==</span> <span class="n">WM_GETDLGCODE</span> <span class="p">||</span> <span class="n">m</span><span class="p">.</span><span class="n">Msg</span> <span class="p">==</span> <span class="n">WM_MOUSEFIRST</span><span class="p">)</span>
                    <span class="p">{</span>
                          <span class="n">Point</span> <span class="n">p</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Point</span><span class="p">();</span>

                          <span class="c1">//the scroll position is returned in the variable p (point)</span>
                          <span class="nf">SendMessage</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">Handle</span><span class="p">,</span> <span class="n">EM_GETSCROLLPOS</span><span class="p">,</span> <span class="n">IntPtr</span><span class="p">.</span><span class="n">Zero</span><span class="p">,</span> <span class="k">ref</span> <span class="n">p</span><span class="p">);</span>  

                          <span class="c1">//sends the position to the other richtextbox (remember to replace its name)</span>
                          <span class="nf">SendMessage</span><span class="p">(</span><span class="n">anotherRichTextBox</span><span class="p">.</span><span class="n">Handle</span><span class="p">,</span> <span class="n">EM_SETSCROLLPOS</span><span class="p">,</span> <span class="n">IntPtr</span><span class="p">.</span><span class="n">Zero</span><span class="p">,</span> <span class="k">ref</span> <span class="n">p</span><span class="p">);</span>  

                    <span class="p">}</span>

              <span class="p">}</span>
      <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET