I"|<ul class="post-list">
    
    
      <li>
        <div class="thumbnail"><img src="/imgs/thumbnails/no_thumbnail.png" data-echo=" /imgs/thumbnails/tesseract-convolutional-preprocessor.webp " alt="Pytorch CRNN: Seq2Seq Digits Recognition w/ CTC" /></div>
        <h2 style="border:none;">
          <a class="post-link" href="/ai/pytorch-crnn-seq2seq-digits-recognition">Pytorch CRNN: Seq2Seq Digits Recognition w/ CTC</a>
        </h2>
        
        <p class="excerpt">
            This article discusses handwritten character recognition (OCR) in images using sequence-to-sequence (seq2seq) mapping performed by a Convolutional Recurrent Neural Network (CRNN) trained with Connectionist Temporal Classification (CTC) loss. The aforementioned approach is employed in multiple modern OCR engines for handwritten...
        </p>
        
        <p class="post-meta">Jun 8, 2020</p>
      </li>
      <hr class="separator" />
    
    
    
      <li>
        <div class="thumbnail"><img src="/imgs/thumbnails/no_thumbnail.png" data-echo=" /imgs/thumbnails/tesseract-convolutional-preprocessor.webp " alt="Improving Tesseract 4's OCR Accuracy through Image Preprocessing" /></div>
        <h2 style="border:none;">
          <a class="post-link" href="/ai/improving-tesseract-4-ocr-accuracy-through-image-preprocessing">Improving Tesseract 4's OCR Accuracy through Image Preprocessing</a>
        </h2>
        
        <p class="excerpt">
            In this work I took a look at Tesseract 4’s performance at recognizing characters from a challenging dataset and proposed a minimalistic convolution-based approach for input image preprocessing that can boost the character-level accuracy from 13.4% to 61.6% (+359% relative...
        </p>
        
        <p class="post-meta">Jun 8, 2020</p>
      </li>
      <hr class="separator" />
    
    
    
      <li>
        <div class="thumbnail"><img src="/imgs/thumbnails/no_thumbnail.png" data-echo=" /imgs/thumbnails/fgvm-gtsrb-adversarial-sample.png " alt="PyTorch Iterative FGVM: Targeted Adversarial Samples for Traffic-Sign Recognition" /></div>
        <h2 style="border:none;">
          <a class="post-link" href="/ai/iterative-fgvm-targeted-adversarial-samples-traffic-sign-recognition">PyTorch Iterative FGVM: Targeted Adversarial Samples for Traffic-Sign Recognition</a>
        </h2>
        
        <p class="excerpt">
            Inspired by the progress of driverless cars and by the fact that this subject is not thoroughly discussed I decided to give it a shot at creating smooth targeted adversarial samples that are interpreted as legit traffic signs with a...
        </p>
        
        <p class="post-meta">May 1, 2020</p>
      </li>
      <hr class="separator" />
    
    
    
    
    
    
    
    
    
      <li>
        <div class="thumbnail"><img src="/imgs/thumbnails/no_thumbnail.png" data-echo=" /imgs/thumbnails/adversarial_samples_ocr.webp " alt="Evaluating the Robustness of OCR Systems" /></div>
        <h2 style="border:none;">
          <a class="post-link" href="/ai/evaluating-the-robustness-of-ocr-systems">Evaluating the Robustness of OCR Systems</a>
        </h2>
        
        <p class="excerpt">
            In this article, I’m going to discuss about my Bachelor’s degree final project, which is about evaluating the robustness of OCR systems (such as Tesseract or Google’s Cloud Vision) when adversarial samples are presented as inputs. It’s somewhere in-between fuzzing...
        </p>
        
        <p class="post-meta">Sep 8, 2019</p>
      </li>
      <hr class="separator" />
    
    
    
    
    
    
    
    
    
      <li>
        <div class="thumbnail"><img src="/imgs/thumbnails/no_thumbnail.png" data-echo=" /imgs/thumbnails/flappy_bird_ann.webp " alt="C# Making a Neural Network that plays Flappy Bird" /></div>
        <h2 style="border:none;">
          <a class="post-link" href="/ai/c-making-a-neural-network-that-plays-flappy-bird">C# Making a Neural Network that plays Flappy Bird</a>
        </h2>
        
        <p class="excerpt">
            All right, people; now that I’m done with the projects &amp; finals for…a couple of days…I thought it would be a good idea to keep an old promise and finally publish this article too. It’s about how to make a...
        </p>
        
        <p class="post-meta">Aug 1, 2017</p>
      </li>
      <hr class="separator" />
    
    
    
      <li>
        <div class="thumbnail"><img src="/imgs/thumbnails/no_thumbnail.png" data-echo=" /imgs/thumbnails/naive_bayes_ocr.webp " alt="C# Naive Bayes Basic OCR (w/ Example)" /></div>
        <h2 style="border:none;">
          <a class="post-link" href="/ai/c-naive-bayes-basic-ocr-w-example">C# Naive Bayes Basic OCR (w/ Example)</a>
        </h2>
        
        <p class="excerpt">
            Hello again; I’m back - once again sacrificing my time for homework so I can publish something that I find more interesting. So if anyone is still reading this: the whole article is about OCR (which stands for Optical Character...
        </p>
        
        <p class="post-meta">Nov 17, 2016</p>
      </li>
      <hr class="separator" />
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
      <li>
        <div class="thumbnail"><img src="/imgs/thumbnails/no_thumbnail.png" data-echo=" /imgs/thumbnails/backpropagation.webp " alt="C# Backpropagation Tutorial (XOR)" /></div>
        <h2 style="border:none;">
          <a class="post-link" href="/ai/c-backpropagation-tutorial-xor">C# Backpropagation Tutorial (XOR)</a>
        </h2>
        
        <p class="excerpt">
            I’ve been trying for some time to learn and actually understand how Backpropagation (aka backward propagation of errors) works and how it trains the neural networks. Since I encountered many problems while creating the program, I decided to write this...
        </p>
        
        <p class="post-meta">Jun 14, 2013</p>
      </li>
      <hr class="separator" />
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
      <li>
        <div class="thumbnail"><img src="/imgs/thumbnails/no_thumbnail.png" data-echo=" /imgs/thumbnails/perceptron.webp " alt="C# Perceptron Tutorial" /></div>
        <h2 style="border:none;">
          <a class="post-link" href="/ai/c-perceptron-tutorial">C# Perceptron Tutorial</a>
        </h2>
        
        <p class="excerpt">
            The Perceptron is basically the simplest learning algorithm, that uses only one neuron. An usual representation of a perceptron (neuron) that has 2 inputs looks like this: A 2 Inputs + Bias Perceptron Now for a better understanding: Input 1...
        </p>
        
        <p class="post-meta">Sep 16, 2012</p>
      </li>
      <hr class="separator" />
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  </ul>

:ET