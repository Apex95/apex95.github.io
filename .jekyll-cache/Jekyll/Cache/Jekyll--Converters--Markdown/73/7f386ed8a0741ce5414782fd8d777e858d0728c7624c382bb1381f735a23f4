I"Ÿ;<p>Finding a way to encrypt messages in <strong>C#</strong> and decrypting them in <strong>PHP</strong> or vice versa seems to be a ‚Äúchallenge‚Äù for many users. I wrote this tutorial to provide some help with this: below, you can find how to <strong>encrypt / decrypt</strong> messages in <strong>C# / PHP</strong> using <strong>AES256</strong> with <strong>CBC mode</strong>.</p>

<h2 id="1basic-information">1.Basic Information</h2>

<p><strong>AES 256</strong> with <strong>CBC mode</strong> requires 3 values: the <strong>message</strong>, a <strong>key (32 bytes long)</strong> and an <strong>initialization vector (IV)</strong>. Note that you must use the <strong>same IV</strong> when encrypting / decrypting a message: otherwise the message is lost. Sending the <strong>IV</strong> with the message is perfectly safe but it always <strong>has to be a random value</strong>. Since it has a fixed size, I always place the IV at the end of the encrypted text.</p>

<p>The encrypted messages <em>should</em> be encoded using <strong>base64</strong> before being sent.</p>

<p><span style="color:green">base64</span>(<span style="color:gray">[</span>ENCRYPTED_TEXT<span style="color:gray">][<span style="color:darkred">-[‚ÄìIV-[-</span><span style="color:gray">][<span style="color:darkred">INITIALIZATION_VECTOR</span><span style="color:gray">]</span>)</span></span></p>

<font color="darkred">Encryption steps:</font>

<ul>
  <li>encrypt the text</li>
  <li>add the IV at the end</li>
  <li>encode everything (base64)</li>
</ul>

<font color="darkred">Decryption steps:</font>

<ul>
  <li>decode the message</li>
  <li>get &amp; remove the IV</li>
  <li>proceed to decrypt</li>
</ul>

<p>Ok, enough talking, let‚Äôs see some code‚Ä¶</p>

<h2 id="2php-encryptiondecryption-code">2.PHP Encryption/Decryption Code</h2>

<p>PHP accepts keys that are not <strong>32 bytes</strong> long and simply extends them to the correct length. Well‚Ä¶C# doesn‚Äôt, so you‚Äôll have to <strong>use a key that is 32 bytes long</strong>.</p>

<font size="4">Encryption</font>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="k">function</span> <span class="nf">encrypt</span><span class="p">(</span><span class="nv">$text</span><span class="p">,</span> <span class="nv">$pkey</span><span class="p">)</span>
<span class="p">{</span>
	<span class="nv">$key</span> <span class="o">=</span> <span class="nv">$pkey</span><span class="p">;</span>  
	<span class="nv">$IV</span> <span class="o">=</span> <span class="nb">mcrypt_create_iv</span><span class="p">(</span><span class="nb">mcrypt_get_iv_size</span><span class="p">(</span><span class="nx">MCRYPT_RIJNDAEL_256</span><span class="p">,</span> <span class="nx">MCRYPT_MODE_CBC</span><span class="p">),</span> <span class="nx">MCRYPT_RAND</span><span class="p">);</span> 

	<span class="k">return</span> <span class="nb">base64_encode</span><span class="p">(</span><span class="nb">mcrypt_encrypt</span><span class="p">(</span><span class="nx">MCRYPT_RIJNDAEL_256</span><span class="p">,</span> <span class="nv">$key</span><span class="p">,</span> <span class="nv">$text</span><span class="p">,</span> <span class="nx">MCRYPT_MODE_CBC</span><span class="p">,</span> <span class="nv">$IV</span><span class="p">)</span><span class="o">.</span><span class="s2">"-[--IV-[-"</span><span class="o">.</span><span class="nv">$IV</span><span class="p">);</span> 
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<font size="4">Decryption</font>

<figure class="highlight"><pre><code class="language-php" data-lang="php"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="k">function</span> <span class="nf">decrypt</span><span class="p">(</span><span class="nv">$text</span><span class="p">,</span> <span class="nv">$pkey</span><span class="p">)</span>
<span class="p">{</span>
	<span class="nv">$key</span> <span class="o">=</span> <span class="nv">$pkey</span><span class="p">;</span>   
	<span class="nv">$text</span> <span class="o">=</span> <span class="nb">base64_decode</span><span class="p">(</span><span class="nv">$text</span><span class="p">);</span> 
	<span class="nv">$IV</span> <span class="o">=</span> <span class="nb">substr</span><span class="p">(</span><span class="nv">$text</span><span class="p">,</span> <span class="nb">strrpos</span><span class="p">(</span><span class="nv">$text</span><span class="p">,</span> <span class="s2">"-[--IV-[-"</span><span class="p">)</span> <span class="o">+</span> <span class="mi">9</span><span class="p">);</span>
	<span class="nv">$text</span> <span class="o">=</span> <span class="nb">str_replace</span><span class="p">(</span><span class="s2">"-[--IV-[-"</span><span class="o">.</span><span class="nv">$IV</span><span class="p">,</span> <span class="s2">""</span><span class="p">,</span> <span class="nv">$text</span><span class="p">);</span>

	<span class="k">return</span> <span class="nb">rtrim</span><span class="p">(</span><span class="nb">mcrypt_decrypt</span><span class="p">(</span><span class="nx">MCRYPT_RIJNDAEL_256</span><span class="p">,</span> <span class="nv">$key</span><span class="p">,</span> <span class="nv">$text</span><span class="p">,</span> <span class="nx">MCRYPT_MODE_CBC</span><span class="p">,</span> <span class="nv">$IV</span><span class="p">),</span> <span class="s2">"</span><span class="se">\0</span><span class="s2">"</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="3c-encryptiondecryption-code">3.C# Encryption/Decryption Code</h2>

<p>As I said before, C# doesn‚Äôt accept keys that aren‚Äôt <strong>32 bytes long</strong> - it will throw an error. Also, many people get tricked here because of the <strong>encoding</strong> (most of the times you have to use <strong>Encoding.Default</strong>).</p>

<font size="4">Encryption</font>

<figure class="highlight"><pre><code class="language-csharp" data-lang="csharp"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">EncryptMessage</span><span class="p">(</span><span class="kt">byte</span><span class="p">[]</span> <span class="n">text</span><span class="p">,</span> <span class="kt">string</span> <span class="n">key</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">RijndaelManaged</span> <span class="n">aes</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">RijndaelManaged</span><span class="p">();</span>
    <span class="n">aes</span><span class="p">.</span><span class="n">KeySize</span> <span class="p">=</span> <span class="m">256</span><span class="p">;</span>  
    <span class="n">aes</span><span class="p">.</span><span class="n">BlockSize</span> <span class="p">=</span> <span class="m">256</span><span class="p">;</span>
    <span class="n">aes</span><span class="p">.</span><span class="n">Padding</span> <span class="p">=</span> <span class="n">PaddingMode</span><span class="p">.</span><span class="n">Zeros</span><span class="p">;</span>
    <span class="n">aes</span><span class="p">.</span><span class="n">Mode</span> <span class="p">=</span> <span class="n">CipherMode</span><span class="p">.</span><span class="n">CBC</span><span class="p">;</span>

    <span class="n">aes</span><span class="p">.</span><span class="n">Key</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>
    <span class="n">aes</span><span class="p">.</span><span class="nf">GenerateIV</span><span class="p">();</span>  

    <span class="kt">string</span> <span class="n">IV</span> <span class="p">=</span> <span class="p">(</span><span class="s">"-[--IV-[-"</span> <span class="p">+</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="n">aes</span><span class="p">.</span><span class="n">IV</span><span class="p">));</span>

    <span class="n">ICryptoTransform</span> <span class="n">AESEncrypt</span> <span class="p">=</span> <span class="n">aes</span><span class="p">.</span><span class="nf">CreateEncryptor</span><span class="p">(</span><span class="n">aes</span><span class="p">.</span><span class="n">Key</span><span class="p">,</span> <span class="n">aes</span><span class="p">.</span><span class="n">IV</span><span class="p">);</span>
    <span class="kt">byte</span><span class="p">[]</span> <span class="n">buffer</span> <span class="p">=</span> <span class="n">text</span><span class="p">;</span>

    <span class="k">return</span>
<span class="n">Convert</span><span class="p">.</span><span class="nf">ToBase64String</span><span class="p">(</span><span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="n">AESEncrypt</span><span class="p">.</span><span class="nf">TransformFinalBlock</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">buffer</span><span class="p">.</span><span class="n">Length</span><span class="p">))</span> <span class="p">+</span> <span class="n">IV</span><span class="p">));</span>

<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<font size="4">Decryption</font>

<figure class="highlight"><pre><code class="language-csharp" data-lang="csharp"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre><span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="nf">DecryptMessage</span><span class="p">(</span><span class="kt">string</span> <span class="n">text</span><span class="p">,</span> <span class="kt">string</span> <span class="n">key</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">RijndaelManaged</span> <span class="n">aes</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">RijndaelManaged</span><span class="p">();</span>
    <span class="n">aes</span><span class="p">.</span><span class="n">KeySize</span> <span class="p">=</span> <span class="m">256</span><span class="p">;</span>
    <span class="n">aes</span><span class="p">.</span><span class="n">BlockSize</span> <span class="p">=</span> <span class="m">256</span><span class="p">;</span>
    <span class="n">aes</span><span class="p">.</span><span class="n">Padding</span> <span class="p">=</span> <span class="n">PaddingMode</span><span class="p">.</span><span class="n">Zeros</span><span class="p">;</span>
    <span class="n">aes</span><span class="p">.</span><span class="n">Mode</span> <span class="p">=</span> <span class="n">CipherMode</span><span class="p">.</span><span class="n">CBC</span><span class="p">;</span>

    <span class="n">aes</span><span class="p">.</span><span class="n">Key</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">key</span><span class="p">);</span>

    <span class="n">text</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="n">Convert</span><span class="p">.</span><span class="nf">FromBase64String</span><span class="p">(</span><span class="n">text</span><span class="p">));</span>

    <span class="kt">string</span> <span class="n">IV</span> <span class="p">=</span> <span class="n">text</span><span class="p">;</span>
    <span class="n">IV</span> <span class="p">=</span> <span class="n">IV</span><span class="p">.</span><span class="nf">Substring</span><span class="p">(</span><span class="n">IV</span><span class="p">.</span><span class="nf">IndexOf</span><span class="p">(</span><span class="s">"-[--IV-[-"</span><span class="p">)</span> <span class="p">+</span> <span class="m">9</span><span class="p">);</span>
    <span class="n">text</span> <span class="p">=</span> <span class="n">text</span><span class="p">.</span><span class="nf">Replace</span><span class="p">(</span><span class="s">"-[--IV-[-"</span> <span class="p">+</span> <span class="n">IV</span><span class="p">,</span> <span class="s">""</span><span class="p">);</span>

    <span class="n">text</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="nf">ToBase64String</span><span class="p">(</span><span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">text</span><span class="p">));</span>
    <span class="n">aes</span><span class="p">.</span><span class="n">IV</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">IV</span><span class="p">);</span>

    <span class="n">ICryptoTransform</span> <span class="n">AESDecrypt</span> <span class="p">=</span> <span class="n">aes</span><span class="p">.</span><span class="nf">CreateDecryptor</span><span class="p">(</span><span class="n">aes</span><span class="p">.</span><span class="n">Key</span><span class="p">,</span> <span class="n">aes</span><span class="p">.</span><span class="n">IV</span><span class="p">);</span>
    <span class="kt">byte</span><span class="p">[]</span> <span class="n">buffer</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="nf">FromBase64String</span><span class="p">(</span><span class="n">text</span><span class="p">);</span>

    <span class="k">return</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="nf">GetString</span><span class="p">(</span><span class="n">AESDecrypt</span><span class="p">.</span><span class="nf">TransformFinalBlock</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">buffer</span><span class="p">.</span><span class="n">Length</span><span class="p">));</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
:ET