I"(<p><strong>XML</strong> is the main file type used to save our program’s data. In this tutorial, I’ll show you how to work with XML files in C#.</p>

<p>I’ll be working with the following file:</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="nt">&lt;products&gt;</span>

         <span class="nt">&lt;product&gt;</span>
                <span class="nt">&lt;name&gt;</span>Book<span class="nt">&lt;/name&gt;</span>
                <span class="nt">&lt;price&gt;</span>15$<span class="nt">&lt;/price&gt;</span>
         <span class="nt">&lt;/product&gt;</span>

         <span class="nt">&lt;product&gt;</span>
                <span class="nt">&lt;name&gt;</span>Crayon<span class="nt">&lt;/name&gt;</span>
                <span class="nt">&lt;price&gt;</span>5$<span class="nt">&lt;/price&gt;</span>
         <span class="nt">&lt;/product&gt;</span>

<span class="nt">&lt;/products&gt;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="basics">Basics</h2>

<p><strong>&lt;products&gt;</strong> is the main node.<br />
<strong>&lt;product&gt;</strong> is a smaller node, found in the main node, each one contains information about a product (its parent is ‘product’)<br />
<strong>&lt;name&gt;</strong> and <strong>&lt;price&gt;</strong> are nodes which correspond to <strong>product</strong> node (parent node: ‘product’).</p>

<p>Ok, now for the coding part, include in the project: <strong>using System.Xml</strong>;<br />
After this, we create an <strong>XmlDocument</strong> object - used for opening the xml file:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">XmlDocument</span> <span class="n">xmldoc</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">XmlDocument</span><span class="p">();</span>
<span class="n">xmldoc</span><span class="p">.</span><span class="nf">Load</span><span class="p">(</span><span class="s">"file.xml"</span><span class="p">);</span>  <span class="c1">//open the file</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="reading-from-a-node">Reading from a node</h2>

<p>Before reading the values form our file, we must select the nodes.</p>

<p>If we need to select <strong>only one node</strong> corresponding to a certain product, the following code must be used:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">XmlNode</span> <span class="n">book_node</span> <span class="p">=</span> <span class="n">xmldoc</span><span class="p">.</span><span class="nf">SelectSingleNode</span><span class="p">(</span><span class="s">"/products/product[name='Book']"</span><span class="p">);</span> <span class="c1">//selects the node where name is 'Book'</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>If we need to know the price of the product selected before:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kt">string</span> <span class="n">book_price</span> <span class="p">=</span> <span class="n">book_node</span><span class="p">[</span><span class="s">"price"</span><span class="p">].</span><span class="n">InnerText</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>However, it is also possible to select multiple nodes from the file - not just one:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">XmlNodeList</span> <span class="n">nodelist</span> <span class="p">=</span> <span class="n">xmldoc</span><span class="p">.</span><span class="nf">SelectNodes</span><span class="p">(</span><span class="s">"/products/product"</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The code above returns an array containing all the nodes found in <strong>products</strong>.</p>

<p>Now, we get the values of every node in the list:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
</pre></td><td class="rouge-code"><pre><span class="k">foreach</span> <span class="p">(</span><span class="n">XmlNode</span> <span class="n">node</span> <span class="k">in</span> <span class="n">nodelist</span><span class="p">)</span>
<span class="p">{</span>
         <span class="kt">string</span> <span class="n">name</span> <span class="p">=</span> <span class="n">node</span><span class="p">[</span><span class="s">"name"</span><span class="p">].</span><span class="n">InnerText</span><span class="p">;</span>
         <span class="kt">string</span> <span class="n">price</span> <span class="p">=</span> <span class="n">node</span><span class="p">[</span><span class="s">"price"</span><span class="p">].</span><span class="n">InnerText</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="adding-a-new-node">Adding a new node</h2>

<p>Let’s say we want to add to our file another product, with a custom name &amp; price.<br />
We start by creating the <strong>product</strong>’s node and attach it to the main node (products):</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">XmlNode</span> <span class="n">product_node</span> <span class="p">=</span> <span class="n">xmldoc</span><span class="p">.</span><span class="nf">CreateElement</span><span class="p">(</span><span class="s">"product"</span><span class="p">);</span>
<span class="n">xmldoc</span><span class="p">.</span><span class="n">DocumentElement</span><span class="p">.</span><span class="nf">AppendChild</span><span class="p">(</span><span class="n">product_node</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Having the node, we have to add the other 2 elements (name &amp; price)</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="n">XmlNode</span> <span class="n">product_name</span> <span class="p">=</span> <span class="n">xmldoc</span><span class="p">.</span><span class="nf">CreateElement</span><span class="p">(</span><span class="s">"name"</span><span class="p">);</span>     
<span class="n">product_node</span><span class="p">.</span><span class="n">InnerText</span> <span class="p">=</span> <span class="s">"Pencil"</span><span class="p">;</span> <span class="c1">//set the product's name</span>
<span class="n">product_node</span><span class="p">.</span><span class="nf">AppendChild</span><span class="p">(</span><span class="n">product_name</span><span class="p">);</span>  <span class="c1">//and attach it to the product node</span>

<span class="n">XmlNode</span> <span class="n">product_price</span> <span class="p">=</span> <span class="n">xmldoc</span><span class="p">.</span><span class="nf">CreateElement</span><span class="p">(</span><span class="s">"price"</span><span class="p">);</span>     
<span class="n">product_price</span><span class="p">.</span><span class="n">InnerText</span> <span class="p">=</span> <span class="s">"9$"</span><span class="p">;</span> 
<span class="n">nod_produs</span><span class="p">.</span><span class="nf">AppendChild</span><span class="p">(</span><span class="n">product_name</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="deleting-a-node">Deleting a node</h2>

<p>A node is ‘deleted’ when it’s removed from its parent node, so if we want to delete the last node from the list - the one that we created before, we use this:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="n">XmlNode</span> <span class="n">node</span> <span class="p">=</span> <span class="n">xmldoc</span><span class="p">.</span><span class="nf">SelectSingleNode</span><span class="p">(</span><span class="s">"/products/product[name='Pencil']"</span><span class="p">);</span>  <span class="c1">//select node where name is 'Pencil'</span>
<span class="n">node</span><span class="p">.</span><span class="n">ParentNode</span><span class="p">.</span><span class="nf">RemoveChild</span><span class="p">(</span><span class="n">node</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h2 id="saving-the-file">Saving the file</h2>

<p>Don’t forget to save any changes you made in the xml document:</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">xmldoc</span><span class="p">.</span><span class="nf">Save</span><span class="p">(</span><span class="s">"file.xml"</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The end :)</p>
:ET