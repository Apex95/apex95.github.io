I"×<p>This method is used to detect if a running process has a <strong>debugger</strong> attached to it. It involves using <strong>CheckRemoteDebuggerPresent</strong>, imported from <strong>kernel32.dll</strong> via PInvoke.</p>

<p>Itâ€™s a neat way to add a little bit of protection to your program, but donâ€™t expect too much since .NET is far from being safe.</p>

<ul>
  <li>tested on <u>Visual Studio's Debugger</u> &amp; <u>OllyDbg</u></li>
</ul>

<h2 id="how-to">How toâ€¦</h2>

<p>First, include the following lines in your program:</p>

<figure class="highlight"><pre><code class="language-csharp" data-lang="csharp"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
</pre></td><td class="code"><pre><span class="p">[</span><span class="nf">DllImport</span><span class="p">(</span><span class="s">"kernel32.dll"</span><span class="p">,</span> <span class="n">SetLastError</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span> <span class="n">ExactSpelling</span> <span class="p">=</span> <span class="k">true</span><span class="p">)]</span>
<span class="k">static</span> <span class="k">extern</span> <span class="kt">bool</span> <span class="nf">CheckRemoteDebuggerPresent</span><span class="p">(</span><span class="n">IntPtr</span> <span class="n">hProcess</span><span class="p">,</span> <span class="k">ref</span> <span class="kt">bool</span> <span class="n">isDebuggerPresent</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>Now, this method is pretty simple to use since it takes only 2 arguments:</p>

<ol>
  <li><strong>IntPtr hProcess</strong> = the target processâ€™ handle</li>
  <li><strong>ref bool isDebuggerPresent</strong> = pointer that indicates the result</li>
</ol>

<p>Since itâ€™s pretty straightforward, I guess thereâ€™s no need for additional details - in any case you can find the complete source code below:</p>

<figure class="highlight"><pre><code class="language-csharp" data-lang="csharp"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Diagnostics</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Runtime.InteropServices</span><span class="p">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">DetectDebugger</span>
<span class="p">{</span>
    <span class="p">[</span><span class="nf">DllImport</span><span class="p">(</span><span class="s">"kernel32.dll"</span><span class="p">,</span> <span class="n">SetLastError</span> <span class="p">=</span> <span class="k">true</span><span class="p">,</span> <span class="n">ExactSpelling</span> <span class="p">=</span> <span class="k">true</span><span class="p">)]</span>
    <span class="k">static</span> <span class="k">extern</span> <span class="kt">bool</span> <span class="nf">CheckRemoteDebuggerPresent</span><span class="p">(</span><span class="n">IntPtr</span> <span class="n">hProcess</span><span class="p">,</span> <span class="k">ref</span> <span class="kt">bool</span> <span class="n">isDebuggerPresent</span><span class="p">);</span>

    <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="kt">bool</span> <span class="n">isDebuggerPresent</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="nf">CheckRemoteDebuggerPresent</span><span class="p">(</span><span class="n">Process</span><span class="p">.</span><span class="nf">GetCurrentProcess</span><span class="p">().</span><span class="n">Handle</span><span class="p">,</span> <span class="k">ref</span> <span class="n">isDebuggerPresent</span><span class="p">);</span>

        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"Debugger Attached: "</span> <span class="p">+</span> <span class="n">isDebuggerPresent</span><span class="p">);</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">ReadLine</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<h2 id="debuggerisattached-">Debugger.IsAttached ?</h2>

<p>In order to avoid any confusion about <strong>Debugger.IsAttached</strong> and <strong>CheckRemoteDebuggerPresent</strong> - sorry I didnâ€™t mention this earlier in the article:</p>

<ul>
  <li><strong>IsDebuggerPresent</strong> = works for any running process and detects native debuggers too.</li>
  <li><strong>Debugger.IsAttached</strong> = works only for the current process and detects only managed debuggers. As an example, OllyDbg <strong>wonâ€™t</strong> be detected by this.</li>
</ul>
:ET